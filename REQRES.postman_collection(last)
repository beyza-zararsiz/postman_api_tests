{
	"info": {
		"_postman_id": "01c8cb29-2fd5-4c2c-beb8-7412c54b61f4",
		"name": "REQRES",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36731412"
	},
	"item": [
		{
			"name": "GetUsers",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response=pm.response.json();\r",
							"pm.test(\"page is 2\", function(){\r",
							"    pm.expect(response.page).to.be.equal(2)\r",
							"});\r",
							"\r",
							"pm.test(\"user length is equal to total\", function(){\r",
							"    pm.expect(response.data.length).to.be.equal(response.per_page)\r",
							"});\r",
							"\r",
							"pm.environment.set(\"data_id\", response.data[0].id)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/?page=2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						""
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UserNotFound",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response=pm.response.json();\r",
							"pm.test(\"User ID exist\", function(){\r",
							"        pm.expect(response.data.id).is.equal(pm.environment.get(\"data_id\"))\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{data_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response=pm.response.json();\r",
							"pm.test(\"name is verified\", function(){\r",
							"    pm.expect(response.name).not.equal(null);\r",
							"    pm.expect(response.name).to.be.a('string')\r",
							"})\r",
							"\r",
							"pm.test(\"job is verified\", function(){\r",
							"    pm.expect(response.job).not.equal(null);\r",
							"    pm.expect(response.job).to.be.a('string')\r",
							"})\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"user_id\", response.id);\r",
							"pm.environment.set(\"user_name\", response.name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"beyza\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response=pm.response.json();\r",
							"pm.test(\"email is verified\", function(){\r",
							"    pm.expect(response.email).not.equal(null);\r",
							"});\r",
							"\r",
							"pm.test(\"password is verified\", function(){\r",
							"    pm.expect(response.password).not.equal(null);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201])\r",
							"});\r",
							"\r",
							"pm.environment.set(\"register_email\", response.email)\r",
							"pm.environment.set(\"register_password\", response.password)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"bey.zar@reqres.inc\",\r\n    \"password\": \"passw2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/register/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"register",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response=pm.response.json();\r",
							"pm.test(\"name updated\", function(){\r",
							"    pm.expect(response.name, \"Name can not be null\").not.equal(null);\r",
							"    pm.expect(response.name, \"Name field must be a string\").to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"name changed\", function(){\r",
							"    pm.expect(response.name, \"Name can not be same with the previous one\").not.equal(pm.environment.get(\"user_name\"));\r",
							"});\r",
							"\r",
							"pm.test(\"job updated\", function(){\r",
							"    pm.expect(response.job, \"job can not be null\").not.equal(null);\r",
							"    pm.expect(response.job, \"job field must be a string\").to.be.a('string');\r",
							"})\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201])\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"beyza_a\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201])\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"bey.zar@reqres.inc\",\r\n    \"password\": \"passw2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/login/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"login",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{register_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginUnsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response=pm.response.json();\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"bey.zar@reqres.inc\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		}
	]
}